06.Print Fonksiyonu


1)    >>> dil = "Python programlama dili"
      >>> print(dil)

      Python programlama dili
      
      
2) Python ' da ; Tırnak işaretlerinin farkı yoktur sadece kullanıalcak yere göre değişiklik gösterebilir.
        
          
      Tek tırnak (‘ ‘)
      Çift tırnak (” ”)
      Üç tırnak (“”” “””)

3) Python'da 3 tırnak işaretinin asıl kullanım amacı farklıdır ; bir satırın yetmediği durumlarda bu 3 tırnak ile başlayıp
   enter tuşuna basarsak alt satırdan metne devam edebiliriz
   
4) print("Python", "Programlama", "Dili")   Bu şekilde birden fazla parametre alabilir.

    Python Programlama Dİli
    
  
5)SEP özelliği ; Yukarıdaki kod aslında orjinalinde şu şekilde görünür ; print("Python", "Programlama", "Dili", sep=" ")

  böylelikle kelimeler arasına koyulacak seperatör seçilmiş olur bunu değiştirebiliriz.
  
  print("Kaan", "Kaya", sep=".")  --> Kaan.Kaya
  
  
  
6) Newline Özelliği ; 

    >>> print("Pardus\nUbuntu")

          Pardus
          Ubuntu


7)END özelliği ; 


  Yani diyelim ki şöyle bir kod yazdık:

>>> print("Bugün günlerden Salı")

Burada herhangi bir end parametresi görmüyoruz. Ancak Python yukarıdaki kodu aslında şöyle algılar:

>>> print("Bugün günlerden Salı", end="\n")


8)FİLE Özelliği ; Ekran cıktılarının nereye verileceğine belirttiğimiz bölümdür.


      print() fonksiyonunun deneme.txt adlı bir dosyaya çıktı vermesini sağlayalım.

        Bunun için sırasıyla şu kodları yazalım:

          >>> dosya = open("deneme.txt", "w")
          >>> print("Ben Python, Monty Python!", file=dosya)
          >>> dosya.close()


**Oluşturduğumuz bu deneme.txt adlı dosya, o anda bulunduğunuz dizin içinde oluşacaktır.
  Bu dizinin hangisi olduğunu öğrenmek için şu komutları verebilirsiniz:

      >>> import os
      >>> os.getcwd()



9)ÖZELLİKLERİN ORİJİNAL HALİ

            >>> print("Tahir olmak da ayıp değil", "Zühre olmak da")

            Python bu komutu şöyle algılar:

            >>> print("Tahir olmak da ayıp değil", "Zühre olmak da",
            ... sep=" ", end="\n", file=sys.stdout)



10)Flush Özelliği ; 

  dosyaya birşeyler yazsak bile close() parametresini kullanmazsak bu bilgiler dosyaya yazılmaz ; yazılma kodu verilene
  kadar bellekte tutulur ve close komutu verilince bu bilgiler berirtilen adrese boşaltılır(flush edilir)
  
  bu flush konumu kontrol edilebilirdir.;
  
  
  
      >>> print("Merhaba Dünya!", file=f, flush=True) 
      
      komutu kullanılırsa bellekte beklemeden bilgiler dosyaya yazılır.
      
      
      
      
   10) Kısa Not ; 


      >>> print(*"BEşiktaş")

         B E Ş İ K T A Ş
         
         
     
    11) Standart CIktı Ekranını Değiştirmek ;
    
    
         >>> import sys
         >>> sys.stdout


         >>> f = open("dosya.txt", "w")
         >>> sys.stdout = f
    
    
    BU aşamadan sonra ekrana yazdırmak için kullanıdıgımız komutlar bile yazdıklarımızı bu dosyaya aktaracaktır.
    
   























